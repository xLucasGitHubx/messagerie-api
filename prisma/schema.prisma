generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model message {
  id           Int           @id @default(autoincrement())
  objet        String?
  corps        String
  date_envoi   DateTime      @default(now())
  statusId     Int
  expediteurId Int
  utilisateur  utilisateur   @relation(fields: [expediteurId], references: [id], map: "Message_expediteurId_fkey")
  status       status        @relation(fields: [statusId], references: [id], map: "Message_statusId_fkey")
  piecejointe  piecejointe[]
  recevoir     recevoir[]

  @@index([expediteurId], map: "Message_expediteurId_fkey")
  @@index([statusId], map: "Message_statusId_fkey")
}

model piecejointe {
  id                 Int     @id @default(autoincrement())
  nom_fichier        String
  taille             Int
  chemin_de_stockage String
  messageId          Int
  message            message @relation(fields: [messageId], references: [id], map: "PieceJointe_messageId_fkey")

  @@index([messageId], map: "PieceJointe_messageId_fkey")
}

model recevoir {
  id_destinataire Int
  id_message      Int
  utilisateur     utilisateur @relation(fields: [id_destinataire], references: [id], map: "Recevoir_id_destinataire_fkey")
  message         message     @relation(fields: [id_message], references: [id], map: "Recevoir_id_message_fkey")

  @@id([id_destinataire, id_message])
  @@index([id_message], map: "Recevoir_id_message_fkey")
}

model status {
  id      Int       @id @default(autoincrement())
  etat    String    @unique(map: "Status_etat_key")
  message message[]
}

model utilisateur {
  id              Int        @id @default(autoincrement())
  nom             String
  prenom          String
  email           String     @unique(map: "Utilisateur_email_key")
  mdp             String
  date_creation   DateTime   @default(now())
  status_en_ligne Boolean    @default(false)
  message         message[]
  recevoir        recevoir[]
}
