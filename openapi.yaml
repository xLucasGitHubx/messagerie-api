openapi: 3.0.0
info:
  title: Messagerie Privée API
  version: 2.1.0
servers:
  - url: http://localhost:3000
paths:
  /utilisateurs/signup:
    post:
      summary: Inscrire un nouvel utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UtilisateurSignup"
      responses:
        "201":
          description: Utilisateur créé avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UtilisateurResponse"
        "400":
          description: Erreur de validation ou email déjà utilisé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /utilisateurs/login:
    post:
      summary: Connexion d'un utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UtilisateurLogin"
      responses:
        "200":
          description: Connexion réussie
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Erreur d'authentification (utilisateur non trouvé ou mot de passe incorrect)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erreur interne
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /messages:
    post:
      summary: Envoyer un message avec pièces jointes
      description: Permet d'envoyer un message avec jusqu'à 5 pièces jointes.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                objet:
                  type: string
                  description: Objet du message
                corps:
                  type: string
                  description: Contenu du message
                destinataires:
                  type: string
                  description: Tableau JSON des adresses e-mail (envoyé sous forme de chaîne)
                files:
                  type: string
                  format: binary
                  # type: array
                  # items:
                  #   type: string
                  #   format: binary
                  description: Jusqu'à 5 fichiers joints
              required:
                - corps
                - destinataires
      responses:
        "201":
          description: Message envoyé avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageEnvoyeResponse"
        "400":
          description: Erreur lors de l'envoi du message (emails destinataires introuvables, dépassement de la taille des fichiers, etc.)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Non autorisé (Token invalide ou manquant)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erreur interne
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /messages/recu:
    get:
      summary: Récupérer la liste des messages reçus
      description: L'utilisateur doit être authentifié.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Liste des messages reçus
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MessageRecu"
        "401":
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erreur interne
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /messages/envoyes:
    get:
      summary: Récupérer la liste des messages envoyés
      description: L'utilisateur doit être authentifié.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Liste des messages envoyés
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MessageEnvoye"
        "401":
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erreur interne
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /messages/{messageId}/attachments/{id}:
    get:
      summary: Télécharger une pièce jointe d'un message
      description: L'utilisateur doit être authentifié et propriétaire du message.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: messageId
          required: true
          schema:
            type: integer
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Pièce jointe téléchargée avec succès
          content:
            application/octet-stream: {}
        "404":
          description: Pièce jointe non trouvée
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ## Schémas des Utilisateurs
    UtilisateurSignup:
      type: object
      required:
        - nom
        - prenom
        - email
        - mdp
      properties:
        nom:
          type: string
        prenom:
          type: string
        email:
          type: string
          format: email
        mdp:
          type: string
          format: password

    UtilisateurLogin:
      type: object
      required:
        - email
        - mdp
      properties:
        email:
          type: string
          format: email
        mdp:
          type: string
          format: password

    Utilisateur:
      type: object
      properties:
        id:
          type: integer
        nom:
          type: string
        prenom:
          type: string
        email:
          type: string
          format: email
        date_creation:
          type: string
          format: date-time
        status_en_ligne:
          type: boolean

    UtilisateurResponse:
      type: object
      properties:
        message:
          type: string
        utilisateur:
          $ref: "#/components/schemas/Utilisateur"

    LoginResponse:
      type: object
      properties:
        token:
          type: string
        nom:
          type: string
        prenom:
          type: string

    ## Schémas des Messages
    MessageCreate:
      type: object
      required:
        - corps
        - destinataires
      properties:
        objet:
          type: string
        corps:
          type: string
        destinataires:
          type: array
          items:
            type: string
            format: email

    DestinataireDetail:
      type: object
      properties:
        id_destinataire:
          type: integer
        nom:
          type: string
        prenom:
          type: string
        email:
          type: string
          format: email

    PieceJointe:
      type: object
      properties:
        id:
          type: integer
        nom_fichier:
          type: string
        taille:
          type: integer
        chemin_de_stockage:
          type: string
        messageId:
          type: integer

    MessageEnvoye:
      type: object
      properties:
        id:
          type: integer
        objet:
          type: string
        corps:
          type: string
        date_envoi:
          type: string
          format: date-time
        destinataires:
          type: array
          items:
            $ref: "#/components/schemas/DestinataireDetail"
        piecesJointes:
          type: array
          items:
            $ref: "#/components/schemas/PieceJointe"

    MessageRecuExpediteur:
      type: object
      properties:
        id:
          type: integer
        nom:
          type: string
        prenom:
          type: string
        email:
          type: string
          format: email

    MessageRecu:
      type: object
      properties:
        id:
          type: integer
        objet:
          type: string
        corps:
          type: string
        date_envoi:
          type: string
          format: date-time
        statut:
          type: string
        expediteur:
          $ref: "#/components/schemas/MessageRecuExpediteur"
        piecesJointes:
          type: array
          items:
            $ref: "#/components/schemas/PieceJointe"

    MessageEnvoyeResponse:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: "#/components/schemas/MessageEnvoye"

    MessageIdPayload:
      type: object
      required:
        - messageId
      properties:
        messageId:
          type: integer

    ## Réponses génériques
    SuccessResponse:
      type: object
      properties:
        message:
          type: string

    Error:
      type: object
      properties:
        message:
          type: string
