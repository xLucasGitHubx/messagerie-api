openapi: 3.0.0
info:
  title: Messagerie Privée API
  version: 2.1.0
  description: |
    API permettant la gestion de messages privés, incluant l'envoi, la réception, et la gestion des statuts des messages.
  contact:
    name: Support Technique API Messagerie auteur - Lucas Madjinda
    email: lucasmadjinda@gmail.com
servers:
  - url: http://localhost:3000
    description: Serveur de développement local

tags:
  - name: Utilisateurs
    description: Gestion des utilisateurs
  - name: Messages
    description: Gestion des messages
  - name: Pièces Jointes
    description: Gestion des pièces jointes

paths:
  # Routes Utilisateurs
  /utilisateurs/signup:
    post:
      tags:
        - Utilisateurs
      summary: Inscrire un nouvel utilisateur
      description: Permet de créer un nouveau compte utilisateur.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UtilisateurSignup"
      responses:
        "201":
          description: Utilisateur créé avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UtilisateurResponse"
        "400":
          description: Erreur de validation ou email déjà utilisé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /utilisateurs/login:
    post:
      tags:
        - Utilisateurs
      summary: Connexion d'un utilisateur
      description: Authentifie un utilisateur et retourne un token JWT.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UtilisateurLogin"
      responses:
        "200":
          description: Connexion réussie
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Erreur d'authentification (utilisateur non trouvé ou mot de passe incorrect)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erreur interne
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # Routes Messages
  /messages:
    post:
      tags:
        - Messages
      summary: Envoyer un message avec pièces jointes
      description: Permet d'envoyer un message avec jusqu'à 5 pièces jointes.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MessageCreate"
      responses:
        "201":
          description: Message envoyé avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageEnvoyeResponse"
        "400":
          description: Erreur lors de l'envoi du message (emails destinataires introuvables, dépassement de la taille des fichiers, etc.)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Non autorisé (Token invalide ou manquant)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erreur interne
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /messages/recu:
    get:
      tags:
        - Messages
      summary: Récupérer la liste des messages reçus
      description: Récupère tous les messages reçus par l'utilisateur authentifié.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Liste des messages reçus
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MessageRecu"
        "401":
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erreur interne
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /messages/recu/lu:
    put:
      tags:
        - Messages
      summary: Marquer un message reçu comme "lu"
      description: Met à jour le statut d'un message reçu en "lu".
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateStatut"
      responses:
        "200":
          description: Message marqué comme lu avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: Erreur de validation du statut
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Message non trouvé ou accès non autorisé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erreur interne
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /messages/recu/non-lu:
    put:
      tags:
        - Messages
      summary: Marquer un message reçu comme "non lu"
      description: Met à jour le statut d'un message reçu en "non lu".
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateStatut"
      responses:
        "200":
          description: Message marqué comme non lu avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: Erreur de validation du statut
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Message non trouvé ou accès non autorisé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erreur interne
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /messages/envoyes:
    get:
      tags:
        - Messages
      summary: Récupérer la liste des messages envoyés
      description: Récupère tous les messages envoyés par l'utilisateur authentifié.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Liste des messages envoyés
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MessageEnvoye"
        "401":
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erreur interne
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # Routes Pièces Jointes
  /messages/{messageId}/attachments/{attachmentId}:
    get:
      tags:
        - Pièces Jointes
      summary: Télécharger une pièce jointe d'un message
      description: Permet de télécharger une pièce jointe spécifique d'un message. L'utilisateur doit être authentifié et propriétaire du message.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: messageId
          required: true
          description: ID du message
          schema:
            type: integer
        - in: path
          name: attachmentId
          required: true
          description: ID de la pièce jointe
          schema:
            type: integer
      responses:
        "200":
          description: Pièce jointe téléchargée avec succès
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "401":
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Pièce jointe non trouvée
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erreur interne
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ## Schémas des Utilisateurs
    UtilisateurSignup:
      type: object
      required:
        - nom
        - prenom
        - email
        - mdp
      properties:
        nom:
          type: string
          example: "Doe"
        prenom:
          type: string
          example: "John"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        mdp:
          type: string
          format: password
          example: "P@ssw0rd!"

    UtilisateurLogin:
      type: object
      required:
        - email
        - mdp
      properties:
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        mdp:
          type: string
          format: password
          example: "P@ssw0rd!"

    Utilisateur:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nom:
          type: string
          example: "Doe"
        prenom:
          type: string
          example: "John"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        date_creation:
          type: string
          format: date-time
          example: "2025-01-01T12:00:00Z"
        status_en_ligne:
          type: boolean
          example: true

    UtilisateurResponse:
      type: object
      properties:
        message:
          type: string
          example: "Utilisateur créé avec succès"
        utilisateur:
          $ref: "#/components/schemas/Utilisateur"

    LoginResponse:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        nom:
          type: string
          example: "Doe"
        prenom:
          type: string
          example: "John"

    ## Schémas des Messages
    MessageCreate:
      type: object
      required:
        - corps
        - destinataires
      properties:
        objet:
          type: string
          description: Objet du message
          example: "Réunion de projet"
        corps:
          type: string
          description: Contenu du message
          example: "Bonjour, veuillez trouver ci-joint les documents pour la réunion de projet."
        destinataires:
          type: string
          description: Tableau JSON des adresses e-mail (envoyé sous forme de chaîne)
          example: '["destinataire1@example.com", "destinataire2@example.com"]'
        files:
          type: string
          format: binary
          description: Jusqu'à 5 fichiers joints

    DestinataireDetail:
      type: object
      properties:
        id_destinataire:
          type: integer
          example: 2
        nom:
          type: string
          example: "Smith"
        prenom:
          type: string
          example: "Anna"
        email:
          type: string
          format: email
          example: "anna.smith@example.com"

    PieceJointe:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nom_fichier:
          type: string
          example: "document.pdf"
        taille:
          type: integer
          example: 2048
        chemin_de_stockage:
          type: string
          example: "/uploads/document.pdf"
        messageId:
          type: integer
          example: 1

    MessageEnvoye:
      type: object
      properties:
        id:
          type: integer
          example: 1
        objet:
          type: string
          example: "Réunion de projet"
        corps:
          type: string
          example: "Bonjour, veuillez trouver ci-joint les documents pour la réunion de projet."
        date_envoi:
          type: string
          format: date-time
          example: "2025-01-02T09:30:00Z"
        destinataires:
          type: array
          items:
            $ref: "#/components/schemas/DestinataireDetail"
        piecesJointes:
          type: array
          items:
            $ref: "#/components/schemas/PieceJointe"

    MessageRecuExpediteur:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nom:
          type: string
          example: "Doe"
        prenom:
          type: string
          example: "John"
        email:
          type: string
          format: email
          example: "john.doe@example.com"

    MessageRecu:
      type: object
      properties:
        id:
          type: integer
          example: 1
        objet:
          type: string
          example: "Réunion de projet"
        corps:
          type: string
          example: "Bonjour, veuillez trouver ci-joint les documents pour la réunion de projet."
        date_envoi:
          type: string
          format: date-time
          example: "2025-01-02T09:30:00Z"
        statut:
          type: string
          example: "lu"
        expediteur:
          $ref: "#/components/schemas/MessageRecuExpediteur"
        piecesJointes:
          type: array
          items:
            $ref: "#/components/schemas/PieceJointe"

    MessageEnvoyeResponse:
      type: object
      properties:
        message:
          type: string
          example: "Message envoyé avec succès"
        data:
          $ref: "#/components/schemas/MessageEnvoye"

    UpdateStatut:
      type: object
      required:
        - messageId
      properties:
        messageId:
          type: integer
          example: 1

    ## Réponses génériques
    SuccessResponse:
      type: object
      properties:
        message:
          type: string
          example: "Statut du message mis à jour avec succès"

    Error:
      type: object
      properties:
        message:
          type: string
          example: "Description de l'erreur"

    ## Schéma des Pièces Jointes
    AttachmentDownload:
      type: string
      format: binary
